services:
  # Overrides
  db:
    environment:
      POSTGRES_USER: freehunt
      POSTGRES_PASSWORD_FILE: /run/secrets/backend_postgres_password
      POSTGRES_DB: freehunt
    secrets:
      - backend_postgres_password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  adminer:
    deploy:
      # 'Disable' adminer
      replicas: 0

  authentik-postgresql:
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/authentik_postgresql_password
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
    secrets:
      - authentik_postgresql_password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  authentik-redis:
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  authentik-server:
    environment:
      AUTHENTIK_POSTGRESQL__PASSWORD: file:///run/secrets/authentik_postgresql_password
      AUTHENTIK_SECRET_KEY: file:///run/secrets/authentik_secret_key
    secrets:
      - authentik_postgresql_password
      - authentik_secret_key
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  authentik-worker:
    environment:
      AUTHENTIK_POSTGRESQL__PASSWORD: file:///run/secrets/authentik_postgresql_password
      AUTHENTIK_SECRET_KEY: file:///run/secrets/authentik_secret_key
    secrets:
      - authentik_postgresql_password
      - authentik_secret_key
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  matomo-db:
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/matomo_mysql_root_password
      MYSQL_DATABASE: matomo
      MYSQL_USER: matomo
      MYSQL_PASSWORD_FILE: /run/secrets/matomo_database_password
    secrets:
      - matomo_mysql_root_password
      - matomo_database_password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  matomo:
    environment:
      MATOMO_DATABASE_USERNAME: matomo
      MATOMO_DATABASE_PASSWORD_FILE: /run/secrets/matomo_database_password
      MATOMO_DATABASE_DBNAME: matomo
    secrets:
      - matomo_database_password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  # Frontend
  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-freehunt}/freehunt-frontend:latest
    ports:
      - "5173:5173"
    secrets:
      - socket_url
    deploy:
      replicas: 3

  # Backend
  backend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-freehunt}/freehunt-backend:latest
    ports:
      - "3000:3000"
    secrets:
      - database_url
      - s3_access_key
      - s3_secret_key
      - stripe_secret_key
      - stripe_webhook_secret
      - socket_url
    deploy:
      replicas: 3

  # Production-only services
  uptime-kuma:
    container_name: uptime-kuma
    image: louislam/uptime-kuma:1.23.16-alpine
    ports:
      - 3002:3001
    volumes:
      - uptime-kuma-data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

volumes:
  uptime-kuma-data:

secrets:
  # Backend secrets
  database_url:
    external: true
  backend_postgres_password:
    external: true

  # Authentik secrets
  authentik_postgresql_password:
    external: true
  authentik_secret_key:
    external: true

  # Matomo secrets
  matomo_database_password:
    external: true
  matomo_mysql_root_password:
    external: true

  # Existing secrets
  s3_access_key:
    external: true
  s3_secret_key:
    external: true
  stripe_secret_key:
    external: true
  stripe_webhook_secret:
    external: true

  # socket.io secret
  socket_url:
    external: true
